serviceMonitor:
  enabled: true
  
config:
  datasource:
    host: database-database-service.db-connect.svc
    user: <DB_USERNAME>
    password: <DB_PASSWORD>
    database: java_db
    
resources: 
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi
    
prometheusRule:
  enabled: true
  additionalLabels: 
    release: prometheus
  rules: 
    - alert: PostgreSQLMaxConnectionsReached
      expr: sum by (server) (pg_stat_activity_count) >= sum by (server) (pg_settings_max_connections) - sum by (server) (pg_settings_superuser_reserved_connections)
      for: 5m
      labels:
        severity: critical
      annotations:
        description: '{{ "{{ $labels.server }}" }} is exceeding the currently configured maximum Postgres connection limit (current value: {{ `{{ $value }}` }}). Services may be degraded - please take immediate action (you probably need to increase max_connections in the Docker image and re-deploy.'
        summary: '{{ "{{ $labels.server }}" }} has maxed out Postgres connections.'

    - alert: PostgreSQLHighConnections
      expr: sum by (server) (pg_stat_activity_count) > (sum by (server) (pg_settings_max_connections) - sum by (server) (pg_settings_superuser_reserved_connections)) * 0.8
      for: 5m
      labels:
        severity: warning
      annotations:
        description: '{{ "{{ $labels.server }}" }} is exceeding 80% of the currently configured maximum Postgres connection limit (current value: {{ `{{ $value }}` }}). Please check utilization graphs and confirm if this is normal service growth, abuse or an otherwise temporary condition or if new resources need to be provisioned (or the limits increased, which is mostly likely).'
        summary: '{{ "{{ $labels.server }}" }} is over 80% of max Postgres connections.'

    - alert: PostgreSQLDown
      expr: pg_up != 1
      for: 5m
      labels:
        severity: critical
      annotations:
        description: '{{ `{{ $labels.instance }}` }} is rejecting query requests from the exporter, and thus probably not allowing DNS requests to work either. User services should not be effected provided at least 1 node is still alive.'
        summary: 'PostgreSQL is not processing queries: {{ `{{ $labels.instance }}` }}'

    - alert: PostgreSQLSlowQueries
      expr: |-
        avg by (datname) (
          rate (
            pg_stat_activity_max_tx_duration{datname!~"template.*"}[2m]
          )
        ) > 2 * 60
      for: 2m
      labels:
        severity: warning
      annotations:
        description: 'PostgreSQL high number of slow queries for database {{ `{{ $labels.datname }}` }} with a value of {{ `{{ $value }}` }}'
        summary: 'PostgreSQL high number of slow queries for database: {{ `{{ $labels.datname }}` }}'

    - alert: PostgreSQLQPS
      expr: |-
        avg by (datname) (
          irate(
            pg_stat_database_xact_commit{datname!~"template.*"}[5m]
          )
          +
          irate(
            pg_stat_database_xact_rollback{datname!~"template.*"}[5m]
          )
        ) > 10000
      for: 5m
      labels:
        severity: warning
      annotations:
        description: 'PostgreSQL high number of queries per second  for database {{ `{{ $labels.datname }}` }} with a value of {{ `{{ $value }}` }}'
        summary: 'PostgreSQL high number of queries per second for database {{ `{{ $labels.datname }}` }}'

    - alert: PostgreSQLCacheHitRatio
      expr: |-
        avg by (datname) (
          rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m])
          /
          (
            rate(
              pg_stat_database_blks_hit{datname!~"template.*"}[5m]
            )
            +
            rate(
              pg_stat_database_blks_read{datname!~"template.*"}[5m]
            )
          )
        ) ) < 0.98        
      for: 5m
      labels:
        severity: warning
      annotations:
        description: 'PostgreSQL low on cache hit rate for database {{`{{ $labels.datname }}`}} with a value of {{`{{ $value }}`}}'
        summary: 'PostgreSQL low cache hit rate for database {{`{{ $labels.datname }}`}}'
